# Config File Reference: https://github.com/dehydrated-io/dehydrated/blob/master/docs/examples/config

# For testing / development use the staging endpoint of let's encrypt.
# See also: https://github.com/dehydrated-io/dehydrated/blob/master/docs/staging.md
# Comment the line below for production
CA="$CA_URL"

# Which challenge should be used? Currently http-01 and dns-01 are supported
# dns-01 means: Let's encrypt will send a challenge with a text that it wants
# us to put into a TXT record of the DNS response for our domain.
# The hook script below will do that by calling an API of DuckDNS where our
# domain is registered. DuckDNS will add the challenge text to the TXT DNS 
# record and when Let's Encrypt does a DNS lookup (dig <domain> TXT) it will find
# the challenge text their and believe us that we are in control of the domain.
# Then it will issue a certificate for us.
CHALLENGETYPE="dns-01"

# Minimum days before expiration to automatically renew certificate (default: 30)
RENEW_DAYS="$RENEW_DAYS_BEFORE_EXPIRY"

# Script to execute the DNS challenge and run after cert generation.
# The script calls a REST API of DuckDNS to add a challenge text from 
# Let's encrypt to the TXT records for our DNS domain. Let's encrypt will
# check that TXT record to check if we are in control of our domain.
# Only then will Let's Encypt issue a certificate.
HOOK="/dehydrated/scripts/hook.sh"

# Directory for account keys and registration information
ACCOUNTDIR="/dehydrated/accounts"

# Issuer chain cache directory (default: $BASEDIR/chains)
CHAINCACHE="/dehydrated/chains"

# Location of the domains.txt file.
DOMAINS_TXT="/dehydrated/configurations/domains.txt"

# Location of output certificates
CERTDIR="/dehydrated/certificates"